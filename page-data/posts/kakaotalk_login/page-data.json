{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/kakaotalk_login","webpackCompilationHash":"aaf3023d1b1dacafd5c0","result":{"data":{"markdownRemark":{"id":"71d6c2b5-8a59-56c0-b063-c94295d468f1","html":"<p>오늘은 소셜 로그인 중에 하나인 카카오톡 로그인을 구현했다.<br>\n먼저 카카오톡 api를 사용하기 위해 KakaoDevelopers에서 앱을 만들고 웹 플랫폼 선택 사이트 도메인을 등록한다.<br>\n여러가지 키들을 제공해주는데 Javascript 키를 사용해야한다.</p>\n<p>프로젝트하는 디렉토리의 index.html에 카카오톡에서 제공하는 Javascript SDK를 script로 import해준다.<br>\n그리고 로그인 페이지(로그인 컴포넌트)에서 window.Kakao(전역)로 접근한다.<br>\n이제 해당 프로젝트 디렉토리 전역 어디에서든 kakao가 SDK로 제공해주는 것에 대해 접근할 수 있게됬다.</p>\n<p>kakao가 SDK로 제공해주는것을 사용하기 전에 무조건 SDK를 초기화 해줘야하는데 window.Kakao.init(key)로 초기화를 해준다.<br>\n이때 key는 앱을 만들고 설정이 다 끝나면 받게되는 key 중에 javascript key를 넣어준다.<br>\nSDK초기화(window.Kakao.init(key))는 render 메서드가 실행되고 바로 실행되는 componentDidMount()를 사용해서<br>\ncomponentDidMount() 안에 로직을 작성했다.</p>\n<p>카카오에서 기본적으로 카카오톡 로그인 버튼을 생성할 수 있게 제공해주는 함수가 있다.<br>\n사용 방법은 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Kakao<span class=\"token punctuation\">.</span>Auth<span class=\"token punctuation\">.</span><span class=\"token function\">createLoginButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  container<span class=\"token punctuation\">:</span> <span class=\"token string\">\"#kakao-login-btn\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">success</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">authObj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>authObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">fail</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>jsx에서 요소를 미리 만들어두고 요소의 id 값을 container의 값으로 준다.<br>\n버튼이 만들어져 클릭하면 wuccess에 authObj로 객체가 넘어온다.</p>\n<p>위 코드와는 별개로 window.Kakao를 setState해서 상태를 가지고 있는다.<br>\n이 로직도 componentDidMount() 안에 작성했다.</p>\n<p>이제 로그인 버튼도 만들어지고 window.Kakao도 상태로 가지고 있다.<br>\n위 2가지는 이제 화면이 렌더링되고 직후 바로 실행된다.</p>\n<p>이제 로그인 버튼 클릭 했을때 우리 백엔드 서버에 fetch GET으로 access_token을 보내고 response를 받으려고 한다.</p>\n<p>Kakao를 this.state에 Kakao에 할당했다.<br>\n로그인 됬을때 키를 받기위해 kakao에서 제공해주는 함수가 있는데 this.state.Kakao.Auth.login()을 사용한다.<br>\n(kakao에서 제공해주는 Auth.login())<br>\nthis.state.Kakao.Auth.login()는 매개변수로 객체를 받는다.</p>\n<p>로그인을 성공했을 때 kakao로부터 token을 받고 이 token을 fetch GET headers에 담아서 백엔드 서버에 보낸다.<br>\n백엔드 서버에서 정상적으로 받으면 response를 보내준다.</p>\n<p>▼▼아래 코드는 카카오톡 로그인 기능을 구현한 코드이다.▼▼</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Login</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      email<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n      password<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n      Kakao<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span>Kakao<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"f8649f9322f32e7bc59c64a23e9ae213\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    window<span class=\"token punctuation\">.</span>Kakao<span class=\"token punctuation\">.</span>Auth<span class=\"token punctuation\">.</span><span class=\"token function\">createLoginButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      container<span class=\"token punctuation\">:</span> <span class=\"token string\">\"#kakao_login_btn\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">authObj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>authObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// console.log(authObj);</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      Kakao<span class=\"token punctuation\">:</span> window<span class=\"token punctuation\">.</span>Kakao\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function-variable function\">onClickHandleKakaoLogin</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>Kakao<span class=\"token punctuation\">.</span>Auth<span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function-variable function\">success</span><span class=\"token punctuation\">:</span> <span class=\"token parameter\">kakaotoken</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>kakaotoken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://10.58.7.15:8000/users/kakaologin\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n          headers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            Authorization<span class=\"token punctuation\">:</span> kakaotoken<span class=\"token punctuation\">.</span>access_token\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>Kakao<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"login_page\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"login_container\"</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>article className<span class=\"token operator\">=</span><span class=\"token string\">\"login_content\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"kakao_login_btn\"</span> onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickHandleKakaoLogin<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>article<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span>Login<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>처음에 fetch할때는 GET으로 백엔드 서버에 보낼 때 header로 보내달라고 하는데\n어떻게 보내야 하는지를 몰랐다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://10.58.7.15:8000/users/kakaologin\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  headers<span class=\"token punctuation\">:</span> kakaotoken<span class=\"token punctuation\">.</span>access_token\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 작성하기도 하고 url쪽에 붙여서 같이 보내려고도 생각해보고 등등…\n근데 url쪽에 붙여서 보내는건 좀 아닌거 같은데…?? 생각도 들고</p>\n<p>구글링해서 찾아보니 headers에 담아 보내는 코드들이 보여서\n그 코드드를 참고하여 해결했다.</p>","fields":{"slug":"/posts/kakaotalk_login","tagSlugs":["/tag/문제해결/"]},"frontmatter":{"date":"2019-09-06","description":"카카오톡 로그인에 대한 글","tags":["문제해결"],"title":"1차 프로젝트(11일차) 카카오톡 로그인(소셜 로그인)"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/kakaotalk_login"}}}