{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/kakaotalk_login","webpackCompilationHash":"cabd72384e0bf6caabe0","result":{"data":{"markdownRemark":{"id":"e9413c9a-06bc-5010-9a78-9d363eb6f830","html":"<p>오늘은 소셜 로그인 중에 하나인 카카오톡 로그인을 구현했다.<br>\n먼저 카카오톡 api를 사용하기 위해 KakaoDevelopers에서 앱을 만들고<br>\n웹 플랫폼 선택 사이트 도메인을 등록한다.<br>\n여러가지 키들을 제공해주는데 Javascript 키를 사용해야한다.</p>\n<p>프로젝트하는 디렉토리의 index.html에 카카오톡에서 제공하는 Javascript SDK를 script로 import해준다.<br>\n그리고 로그인 페이지(로그인 컴포넌트)에서 window.Kakao(전역)로 접근한다.<br>\n이제 해당 프로젝트 디렉토리 전역 어디에서든 kakao가 SDK로 제공해주는 것에 대해 접근할 수 있게됬다.</p>\n<p>kakao가 SDK로 제공해주는것을 사용하기 전에 무조건 SDK를 초기화 해줘야하는데<br>\nwindow.Kakao.init(key)로 초기화를 해준다.<br>\n이때 key는 앱을 만들고 설정이 다 끝나면 받게되는 key 중에 javascript key를 넣어준다.<br>\nSDK초기화(window.Kakao.init(key))는 render 메서드가 실행되고 바로 실행되는 componentDidMount()를 사용해서<br>\ncomponentDidMount() 안에 로직을 작성했다.</p>\n<p>카카오에서 기본적으로 카카오톡 로그인 버튼을 생성할 수 있게 제공해주는 함수가 있다.<br>\n사용 방법은 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Kakao.Auth.createLoginButton({\n          container: &#39;#kakao-login-btn&#39;,\n          success: function(authObj) {\n            alert(JSON.stringify(authObj));\n          },\n          fail: function(err) {\n             alert(JSON.stringify(err));\n          }\n        });</code></pre></div>\n<p>jsx에서 요소를 미리 만들어두고 요소의 id 값을 container의 값으로 준다.<br>\n버튼이 만들어져 클릭하면 wuccess에 authObj로 객체가 넘어온다.</p>\n<p>위 코드와는 별개로 window.Kakao를 setState해서 상태를 가지고 있는다.<br>\n이 로직도 componentDidMount() 안에 작성했다.</p>\n<p>이제 로그인 버튼도 만들어지고 window.Kakao도 상태로 가지고 있다.<br>\n위 2가지는 이제 화면이 렌더링되고 직후 바로 실행된다.</p>\n<p>이제 로그인 버튼 클릭 했을때 우리 백엔드 서버에 fetch GET으로 access_token을<br>\n보내고 response를 받으려고 한다.</p>\n<p>Kakao를 this.state에 Kakao에 할당했다.<br>\n로그인 됬을때 키를 받기위해 kakao에서 제공해주는 함수가 있는데<br>\nthis.state.Kakao.Auth.login()을 사용한다.(kakao에서 제공해주는 Auth.login())<br>\nthis.state.Kakao.Auth.login()는 매개변수로 객체를 받는다.</p>\n<p>로그인을 성공했을 때 kakao로부터 token을 받고 이 token을 fetch GET headers에<br>\n담아서 백엔드 서버에 보낸다.<br>\n백엔드 서버에서 정상적으로 받으면 response를 보내준다.</p>\n<p>▼▼아래 코드는 카카오톡 로그인 기능을 구현한 코드이다.▼▼</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: &#39;&#39;,\n      password: &#39;&#39;,\n      Kakao: {},\n    };\n  }\n\n  componentDidMount() {\n    window.Kakao.init(&#39;f8649f9322f32e7bc59c64a23e9ae213&#39;);\n    window.Kakao.Auth.createLoginButton({\n      container: &#39;#kakao_login_btn&#39;,\n      success(authObj) {\n        alert(JSON.stringify(authObj));\n        // console.log(authObj);\n      },\n      fail(err) {\n        alert(JSON.stringify(err));\n      },\n    });\n    this.setState({\n      Kakao: window.Kakao,\n    });\n  }\n\n  onClickHandleKakaoLogin = () =&gt; {\n    this.state.Kakao.Auth.login({\n      success: (kakaotoken) =&gt; {\n        console.log(kakaotoken);\n        fetch(&#39;http://10.58.7.15:8000/users/kakaologin&#39;, {\n          headers: {\n            Authorization: kakaotoken.access_token,\n          },\n        }).then((response) =&gt; response.json())\n          .then((response) =&gt; {\n            console.log(response);\n          });\n      },\n    });\n  }\n\n    render() {\n      console.log(this.state.Kakao);\n      return (\n        &lt;div className=&quot;login_page&quot;&gt;\n          &lt;div className=&quot;login_container&quot;&gt;\n            &lt;article className=&quot;login_content&quot;&gt;\n                  &lt;div\n                    id=&quot;kakao_login_btn&quot;\n                    onClick={this.onClickHandleKakaoLogin}\n                  /&gt;\n            &lt;/article&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n      );\n    }\n}\n\n\nexport default withRouter(Login);</code></pre></div>\n<p>처음에 fetch할때는 GET으로 백엔드 서버에 보낼 때 header로 보내달라고 하는데<br>\n어떻게 보내야 하는지를 몰랐다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">fetch(&#39;http://10.58.7.15:8000/users/kakaologin&#39;, {\n          headers: kakaotoken.access_token,\n        })</code></pre></div>\n<p>이렇게 작성하기도 하고 url쪽에 붙여서 같이 보내려고도 생각해보고 등등…<br>\n근데 url쪽에 붙여서 보내는건 좀 아닌거 같은데…?? 생각도 들고</p>\n<p>구글링해서 찾아보니 headers에 담아 보내는 코드들이 보여서<br>\n그 코드드를 참고하여 해결했다.</p>","fields":{"slug":"/posts/kakaotalk_login","tagSlugs":["/tag/javascript/","/tag/비동기/","/tag/react/","/tag/fetch/"]},"frontmatter":{"date":"2019-09-06","description":"카카오톡 로그인에 대한 글","tags":["javascript","비동기","react","fetch"],"title":"1차 프로젝트(11일차) 카카오톡 로그인(소셜 로그인)"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/kakaotalk_login"}}}