{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/DOM","webpackCompilationHash":"da50defbc6b65dfd6504","result":{"data":{"markdownRemark":{"id":"fa2b0146-ff6b-5d8f-a221-04887b77e34b","html":"<h3 id=\"dom\"><a href=\"#dom\" aria-label=\"dom permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM?</h3>\n<p>DOM이란 Document Object Model로 HTML, XML 문서의 프로그래밍 interface이다.<br>\nDOM은 문서의 구조화된 표현을 제공하며 프로그래밍 언어가 DOM 구조에 접근할 수 있는 방법을 제공해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">ex<span class=\"token punctuation\">)</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>웹 페이지는 일종의 문서인데, 웹 브라우저를 통해 그 내용이 해석되어 웹 브라우저 화면에 나타나거나 HTML 소스 자체로 나타나기도 한다.</p>\n<p>javascript와 같은 스크립팅 언어를 이용해 DOM을 수정할 수 있다.</p>\n<p>Document와 window object는 DOM 프로그래밍에서 가장 자주 사용하는 object이다.<br>\nwindow object는 브라우저와 같다고 할 수 있으며 document object는 root document 자체라고 할 수 있다.</p>\n<h3 id=\"web브라우저이-html을-해석하는-순서\"><a href=\"#web%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%9D%B4-html%EC%9D%84-%ED%95%B4%EC%84%9D%ED%95%98%EB%8A%94-%EC%88%9C%EC%84%9C\" aria-label=\"web브라우저이 html을 해석하는 순서 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Web(브라우저)이 HTML을 해석하는 순서</h3>\n<ol>\n<li>HTML 데이터를 파싱한다.</li>\n<li>파싱한 결과로 DOM Tree 구조를 생성한다.</li>\n<li>파싱 중 CSS 링크를 만나면 Style Roule에 의해 CSS 파일을 요청 받고 CSS 파일을 읽어 CSS Object Model을 생성한다.</li>\n<li>DOM Tree와 CSSOM을 이용해 Render Tree를 생성한다.</li>\n<li>Render Tree 구조와 각 노드들의 위치를 계산하여 브라우저 화면을 그린다.</li>\n</ol>\n<h3 id=\"가상-dom\"><a href=\"#%EA%B0%80%EC%83%81-dom\" aria-label=\"가상 dom permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가상 DOM?</h3>\n<p>DOM과 다른 가상에 만들어진 또 다른 DOM으로 DOM을 직접 수정하지 않고 간소화된 DOM을 따로 보관하여 실제 DOM에 적용하기 전에 바뀐 부분이 있는지 확인하여 수정을 하게 된다. (DOM은 실제로 존재하는 반면, 가상DOM은 메모리에 존재하는 추상적DOM이다.)</p>","fields":{"slug":"/posts/DOM","tagSlugs":["/tag/html/","/tag/browser/","/tag/dom/"]},"frontmatter":{"date":"2019-10-01","description":"DOM 에 대한 글","tags":["html","browser","dom"],"title":"DOM"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/DOM"}}}