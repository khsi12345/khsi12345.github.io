{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/execution_context","webpackCompilationHash":"7512ef1caafb8a686b5c","result":{"data":{"markdownRemark":{"id":"413c32e6-32db-5354-8cef-1c88fb2285c8","html":"<h2 id=\"실행-컨텍스트\"><a href=\"#%EC%8B%A4%ED%96%89-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8\" aria-label=\"실행 컨텍스트 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실행 컨텍스트</h2>\n<p>scope, hoisting, this, function, closure 등의 동작원리를 담고 있는 자바스크립트의 핵심 원리.<br>\n실행 가능한 코드를 형상화하고 구분하는 추상적인 개념이라고 정의.<br>\n실행 가능한 코드가 실행되기 위해 필요한 환경.</p>\n<h3 id=\"실행-가능한-코드\"><a href=\"#%EC%8B%A4%ED%96%89-%EA%B0%80%EB%8A%A5%ED%95%9C-%EC%BD%94%EB%93%9C\" aria-label=\"실행 가능한 코드 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실행 가능한 코드??</h3>\n<p>전역 코드: 전역 영역에 존재하는 코드.(다른 언어는 메인 함수 호출이 있어야 코드 실행이 가능하다.)<br>\nEval 코드: eval 함수로 실행되는 코드.<br>\n함수 코드: 함수 내에 존재하는 코드.</p>\n<p>자바스크립트 엔진은 코드를 실행하기 위하여 실행에 필요한 여러가지 정보를 알고 있어야 한다.</p>\n<p>여러가지 정보에는</p>\n<ol>\n<li>전역 변수, 지역 변수, 매개변수, 객체의 프로퍼티.</li>\n<li>함수 선언.</li>\n<li>변수의 유효 범위(scope).</li>\n<li>this.</li>\n</ol>\n<p>global EC(전역 실행 컨텍스트)는 전역 객체를 담고 있다.<br>\n애플리케이션이 종료되기 전까지는 global EC는 유지된다.<br>\n실행 가능한 코드마다 논리적 구조를 가지는 실행 컨텍스트를 생성한다.(실행 컨텍스트를 가진다??)</p>\n<p>실행 컨텍스트는 객체의 형태를 가지며 3가지의 프로퍼티를 가진다.</p>\n<ol>\n<li>Variable Object.</li>\n<li>Scope Chain.</li>\n<li>thisValue.</li>\n</ol>\n<h4 id=\"variable-object\"><a href=\"#variable-object\" aria-label=\"variable object permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Variable Object</h4>\n<p>실행 컨텍스트가 생성되면 자바스크립트 엔진은 실행에 필요한 여러가지 정보들을 담을 객체를 생성한다.<br>\n이를 Variable Object라고 한다.<br>\n변수, 매개변수와 인수 정보, 함수 선언식의 정보를 담는다.</p>\n<p>Variable Object는 실행 컨텍스트의 프로퍼티 이기때문에 값을 가지는데 이 값은 다른 객체를 가리킨다.<br>\n전역 코드 실행시 생성되는 전역 컨텍스트의 경우와 함수를 실행시 생성되는 함수 컨텍스트의 경우 Variable Object가<br>\n가리키는 객체가 다르다.<br>\n이유는 전역 코드와 함수 코드의 내용이 다르기 때문이다.<br>\n예를 들자면 전역 코드에는 매개변수가 없지만 함수에는 매개변수가 있다.</p>\n<p>전역 컨텍스트<br>\nVariable Object는 유일하며 최상위에 위치하고 모든 전역 변수, 전역 함수 등을 포함하는 전역 객체(Global Object)를<br>\n가리키며 Global Object는 전역에 선언된 전역 변수와 전역 함수를 프로퍼티로 갖는다.</p>\n<p>함수 컨텍스트<br>\nVariable Object는 Activation Object를 가리키며 매개변수와 인수들의 정보를 배열의 형태로 담고 있는 arguments object가 추가된다.</p>\n<h4 id=\"scope-chain\"><a href=\"#scope-chain\" aria-label=\"scope chain permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope Chain</h4>\n<p>일종의 리스트로서 전역 객체와 중첩된 함수의 스코프의 레퍼런스를 차례로 저장하고 있다.<br>\n해당 전역 또는 함수가 참조할 수 있는 변수, 함수 선언 등의 정보를 담고 있는 Global Object 또는 Activation Object의<br>\n리스트를 가리킨다.</p>\n<p>현재 실행 컨텍스트의 Activation Object를 선두로 순차적으로 상위 컨텍스트의 Activation Object를 가리키며 마지막<br>\n리스트는 Global Object를 가리킨다.</p>\n<p>식별자 중에서 객체의 프로퍼티가 아닌 식별자 즉 변수를 검색하는 메커니즘이다.<br>\n객체의 프로퍼티를 검색하는 메커니즘은 Prototype Chain이다.</p>\n<p>자바스크립트 엔진은 Scopme Chain을 통해 렉시컬 스코프를 파악한다.<br>\n함수가 중첩 상태일 때 내부함수에서 상위 함수의 스코프와 전역 스코프까지 참조할 수 있는것은 Scop Chain을 통해서<br>\n가능한것이다.</p>\n<h4 id=\"this-value\"><a href=\"#this-value\" aria-label=\"this value permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>this Value</h4>\n<p>this 프로퍼티에는 this 값이 할당된다.<br>\nthis에 할당되는 값은 함수 호출 패턴에 의해 결정된다.(this는 따로 블로그 작성)</p>\n<p>실행 컨텍스트를 바탕으로 다음 3가지가 실행된다.</p>\n<ol>\n<li>Scope Chain의 생성과 초기화.</li>\n<li>Variable Instantiation 실행.</li>\n<li>this Value 결정.</li>\n</ol>\n<h4 id=\"scope-chain의-생성과-초기화\"><a href=\"#scope-chain%EC%9D%98-%EC%83%9D%EC%84%B1%EA%B3%BC-%EC%B4%88%EA%B8%B0%ED%99%94\" aria-label=\"scope chain의 생성과 초기화 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope Chain의 생성과 초기화</h4>\n<p>실행 컨텍스트가 생성된 이후 가장 먼저 실행된다.<br>\n이때 Scope Chain은 Global Object의 레퍼런스를 포함하는 리스트가 된다.</p>\n<h4 id=\"variable-instantiation-실행\"><a href=\"#variable-instantiation-%EC%8B%A4%ED%96%89\" aria-label=\"variable instantiation 실행 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Variable Instantiation 실행</h4>\n<p>Scope Chain의 생성과 초기화가 끝나면 실행된다.<br>\nVariable Object에 프로퍼티와 값을 추가하는 것을 의미한다.</p>\n<p>함수 코드인 경우 매개변수가 Variable Object의 프로퍼티로, 인수가 값으로 설정된다.<br>\n함수 선언(표현식 제외)을 대상으로 함수명이 Variable Object의 프로퍼티로, 생성된 함수 객체가 값으로 설정된다.<br>\n(함수 호이스팅)<br>\n변수 선언을 대상으로 변수명이 Variable Object의 프로퍼티로, undefined가 값으로 설정된다.(변수 호이스팅)</p>\n<h4 id=\"this-value-결정\"><a href=\"#this-value-%EA%B2%B0%EC%A0%95\" aria-label=\"this value 결정 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>this Value 결정</h4>\n<p>Variable Instantiation 실행이 끝나면 실행된다.<br>\nthis Value가 결정되기 이전에 this는 전역 객체를 가리키고 있다가 함수 호출 패턴에 의해 this에 할당되는 값이 결정된다.</p>","fields":{"slug":"/posts/execution_context","tagSlugs":["/tag/javascript/","/tag/excutioncontext/"]},"frontmatter":{"date":"2019-10-30","description":"실행 컨텍스트에 대한 글 작성","tags":["javascript","excutioncontext"],"title":"실행 컨텍스트"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/execution_context"}}}