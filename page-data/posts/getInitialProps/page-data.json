{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/getInitialProps","webpackCompilationHash":"69e8aa3be0d810fce462","result":{"data":{"markdownRemark":{"id":"20b366af-1995-5204-8ce8-cf4f2d06042f","html":"<p>NextJs에서 SSR(서버 사이드 렌더링)을 가능하게 하는 것이 바로 getInitialProps에 있다.<br>\nNextJS에서 모든 스크립트 코드는 NodeJs(서버)와 브라우저(클라이언트) 양쪽 모두에서 수행되지만 getInitialProps<br>\n함수는 서버나 클라이언트 중 한군데서만 실행된다.</p>\n<p>getInitialProps의 SSR 절차</p>\n<ol>\n<li>getInitialProps의 호출<br>\nURL 주소를 이용해 직접 특정 페이지에 접근하면 NodeJs 환경에서 getInitialProps가 호출된다.<br>\n브라우저(클라이언트)에서 SPA로 페이지 이동하는 경우 브라우저 환경에서 getInitialProps가 호출된다.</li>\n<li>getInitialProps가 plain object를 리턴하면 해당 객체가 그대로 class의 constructor의 props로 전달되거나 함수형일<br>\n경우 매개변수로 을 수 있다.</li>\n<li>서버에서 렌더링 된 html이 그대로 브라우저로 내려온다.</li>\n<li>브라우저에서는 constructor에서 props를 통해 전달받은 데이터를 이용해 추가적인 서버 요청없이 화면을 똑같이 다시<br>\n한번 그린다.</li>\n</ol>\n<p>ex)class 경우</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> React<span class=\"token punctuation\">.</span>Component <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">async</span> <span class=\"token function\">getInitialProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> req <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> userAgent <span class=\"token operator\">=</span> req <span class=\"token operator\">?</span> req<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">[</span><span class=\"token string\">\"user-agent\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> navigator<span class=\"token punctuation\">.</span>userAgent<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> userAgent <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>Hello World <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>userAgent<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>ex)함수형 경우</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Page</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> stars <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>Next stars<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>stars<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\nPage<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">getInitialProps</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> req <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://api.github.com/repos/zeit/next.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> stars<span class=\"token punctuation\">:</span> json<span class=\"token punctuation\">.</span>stargazers_count <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Page<span class=\"token punctuation\">;</span></code></pre></div>\n<p>getInitialProps에서 사용할 수 있는 속성</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pathname: path section of URL\nquery: query string section of URL parsed as an object\nasPath: String of the actual path shows in the browser\nreq: HTTP request object(server only)\nres: HTTP response object(server only)\njsonPageRes: Fetch Response object(client only)\nerr: Error object if any error is encountered during the rendering</code></pre></div>\n<p>주의사항<br>\ngetInitialProps는 pages 폴더 안 파일들에서만 사용할 수 있고 자식 컴포넌트들에서는 사용할 수 없다.<br>\ngetInitialProps가 서버측에서 수행될 때만 필요한 모듈들을 클라이언트 쪽에서 불필요하게 로드되지 않도록 주의한다.</p>","fields":{"slug":"/posts/getInitialProps","tagSlugs":["/tag/react/","/tag/ssr/","/tag/nextjs/"]},"frontmatter":{"date":"2019-10-02","description":"getInitialProps 에 대한 글","tags":["react","ssr","nextjs"],"title":"getInitialProps"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/getInitialProps"}}}