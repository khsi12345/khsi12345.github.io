{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/react/component-styling-sass-scss/","webpackCompilationHash":"468e4eb79d27fe0dddd2","result":{"data":{"markdownRemark":{"id":"953a5a84-3ed7-5f4d-8677-fbf441e999ba","html":"<h2 id=\"react-component-styling-중-sassscss\"><a href=\"#react-component-styling-%EC%A4%91-sassscss\" aria-label=\"react component styling 중 sassscss permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Component Styling 중 Sass(Scss)</h2>\n<p>sass(scss)는 Syntactically Awesome Style Sheets의 약자로 문법적으로 어~섬한 스타일 시트다.<br>\nsass(scss)는 복잡한 작업을 쉽게 해주고 코드의 재활용성과 가독성을 up시켜주며 유지보수를 쉽게 해준다.<br>\nCSS pre-processor로 CSS 전처리기이다.<br>\n확장자는 .sass / .scss 이고 개발자가 개발할때는 .sass / .scss 확장자 파일로 코드를 작성하고<br>\n컴파일러를 통해 브라우저가 읽을 수 있는 css로 변환된다.(브라우저는 .sass / .scss 읽지 못함)</p>\n<p>.sass는 문법이 간결한 편이다.<br>\n.scss와의 차이점은 {}와;를 쓰지않고 들여쓰기로 선택자의 유효범위를 구분한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.list\n  width: 100px\n  float: left\n  li\n    color: red\n    background: url(&quot;./image.jpg&quot;)\n    &amp;:last-child\n      margin-right: -10px</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">=border-radius($radius)\n  -webkit-border-radius: $radius\n  -moz-border-radius:    $radius\n  -ms-border-radius:     $radius\n  border-radius:         $radius\n\n.box\n  +border-radius(10px)</code></pre></div>\n<p>.scss는 css와 완전한 호환을 이룬다.<br>\ncss처럼 {}로 선택자의 유효범위를 구분하며 ;도 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.list {\n  width: 100px;\n  float: left;\n  li {\n    color: red;\n    background: url(&quot;./image.jpg&quot;);\n    &amp;:last-child {\n      margin-right: -10px\n    }\n  }\n}</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">@mixin border-radius($radius) {\n  -webkit-border-radius: $radius;\n     -moz-border-radius: $radius;\n      -ms-border-radius: $radius;\n          border-radius: $radius;\n}\n\n.box { @include border-radius(10px); }</code></pre></div>\n<p>중첩</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.section {\n  width: 100%;\n  .list {\n    padding: 20px;\n    li {\n      float: left;\n    }\n  }\n}</code></pre></div>\n<p>&#x26; 키워드를 사용해서 상위 선택자를 참조하여 치환할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.btn {\n  position: absolute;\n  &amp;.active {\n    color: red;\n  }\n}\n\n.list {\n  li {\n    &amp;:last-child {\n      margin-right: 0;\n    }\n  }\n}</code></pre></div>\n<p>중첩된 속성</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.box {\n  font-weight: bold;\n  font-size: 10px;\n  font-family: sans-serif;\n  margin-top: 10px;\n  margin-left: 20px;\n  padding-bottom: 40px;\n  padding-right: 30px;\n}\n================================\n.box {\n  font: {\n    weight: bold;\n    size: 10px;\n    family: sans-serif;\n  };\n  margin: {\n    top: 10px;\n    left: 20px;\n  };\n  padding: {\n    bottom: 40px;\n    right: 30px;\n  };\n}</code></pre></div>\n<p>변수<br>\n사용하고자 하는 변수명 앞에 $ 키워드 사용</p>\n<p>내용 추가 및 보완 예정</p>","fields":{"slug":"/posts/react/component-styling-sass-scss/","tagSlugs":["/tag/react-component-styling/"]},"frontmatter":{"date":"2019-08-18","description":"sass / scss 공부 및 적용","tags":["react component styling"],"title":"React component styling(SASS / SCSS)"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/react/component-styling-sass-scss/"}}}