{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/clouser","webpackCompilationHash":"f213ceb49eb84c19bc11","result":{"data":{"markdownRemark":{"id":"5ccb0990-5218-5d6a-afc0-813fe119a72f","html":"<h3 id=\"clouser-란\"><a href=\"#clouser-%EB%9E%80\" aria-label=\"clouser 란 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>clouser 란??</h3>\n<p>함수와 함수가 선언된 환경의 조합.<br>\n독립적인 자유 변수를 가리키는 함수.<br>\n자신(함수, 내부 함수)을 포함하고 있는 외부 함수보다 더 오래 유지되는 경우, 외부 함수 밖에서 내부 함수가 호출되더라도 외부 함수의 지역 변수에 접근할 수 있는 함수를 말한다.<br>\n즉, 반환된 내부 함수가 자신이 선언됐을 때의 환경인 스코프를 기억하여 자신이 선언됐을 때의 환경(스코프) 밖에서 호출되어도 그 환경(스코프)에 접근할 수 있는 함수를 말한다.</p>\n<p>clouser는 자신이 생성될 때의 환경(스코프)을 기억해야하므로 메모리를 점유할 수 있다.<br>\n하지만 clouser는 자바스크립트의 강력한 기능으로 적극적으로 사용해야 한다.<br>\n또한 클로저 사용이 긑나면 참조를 제거하는 것이 좋다.</p>\n<p>강력한 기능으로는</p>\n<ol>\n<li>현재 상태를 기억하고 변경된 최신 상태를 유지.</li>\n<li>전역 변수의 사용 억제.</li>\n<li>정보의 은닉.</li>\n</ol>\n<p>위 3가지가 있다.</p>","fields":{"slug":"/posts/clouser","tagSlugs":["/tag/javascript/"]},"frontmatter":{"date":"2019-11-18","description":"clouser에 대한 글 작성","tags":["javascript"],"title":"CLOUSER"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/clouser"}}}