{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/data_base/","webpackCompilationHash":"cabd72384e0bf6caabe0","result":{"data":{"markdownRemark":{"id":"e2ecbcbb-001b-5fbd-86d2-260e8c3c02e5","html":"<h3 id=\"데이터-베이스\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B2%A0%EC%9D%B4%EC%8A%A4\" aria-label=\"데이터 베이스 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 베이스</h3>\n<p>애플리케이션에서는 데이터가 메모리 상에서 존재한다.<br>\n메모리 상에서 존재하는 데이터는 휘발성으로 보존이 되지 않는다.(애플리케이션이 종료되면 같이 사라진다.)<br>\n그래서 데이터를 저장, 보존 하기 위해서 데이터 베이스를 사용한다.<br>\n데이터 베이스는 관계형 데이터베이스와 비관계형 데이터베이스가 있다.</p>\n<h3 id=\"관계형-데이터베이스\"><a href=\"#%EA%B4%80%EA%B3%84%ED%98%95-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4\" aria-label=\"관계형 데이터베이스 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관계형 데이터베이스</h3>\n<p>상호 관련성을 가진 형태로 표현한 데이터를 말한다.<br>\n데이터를 테이블들로 표현하며 테이블은 column과 row로 구성된다.<br>\ncolumn은 항목을 말하며 row는 실제 값들이 들어간다.<br>\nrow는 각 고유 키를 가지고 있으며 이 키를 통해서 해당 row를 찾거나 참조하게 된다.</p>\n<p>테이블과 테이블은 어떻게 연결(상호 관련성)을 하는가?<br>\n->Foreign key(외부 테이블의 키)라는 개념을 사용해서 연결한다.</p>\n<p>테이블들을 왜 연결하는가? 하나의 테이블에 정보를 모두 저장하면 안되는가??\n->많은 디스크를 사용하게 되고 잘못된 데이터가 저장 될 가능성이 높아진다.(데이터의 완전성 보장x)</p>\n<p>여러 테이블에 나눠 저장한 후 필요한 테이블끼리 연결하면 위 문제를 방지할 수 있다.</p>\n<h3 id=\"비관계형-데이터베이스\"><a href=\"#%EB%B9%84%EA%B4%80%EA%B3%84%ED%98%95-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4\" aria-label=\"비관계형 데이터베이스 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비관계형 데이터베이스</h3>\n<p>관계형 데이터베이스와 다르게 데이터들을 저장하기 전에 정의 할 필요가 없다.<br>\n관계형 데이터베이스는 저장하기 전에 관계를 정의한다.(모델 정의)</p>\n<h3 id=\"관계형-vs-비관계형\"><a href=\"#%EA%B4%80%EA%B3%84%ED%98%95-vs-%EB%B9%84%EA%B4%80%EA%B3%84%ED%98%95\" aria-label=\"관계형 vs 비관계형 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관계형 VS 비관계형</h3>\n<p>관계형 장점<br>\n데이터를 효율적으로, 체계적으로 저장할 수 있고 관리할 수 있다.<br>\n저장하기 전에 데이터들의 구조를 정의 함으로서 데이터의 완전성이 보장된다.<br>\n트랜잭션</p>\n<p>관계형 단점<br>\n테이블 구조 변화에 유연하지 못하다.<br>\n확장이 쉽지 않다.(단순히 서버를 늘리는것만으로 확장하기 쉽지않고 서버의 성능 자체도 높여아한다.)<br>\n서버를 늘려서 분산 저장하는것도 쉽지 않다.<br>\n언젠가는 관계형 데이터베이스만으로는 한계가 온다.(비관계형이나 빅데이터 같은걸로 조화를 이뤄야한다.)</p>\n<p>비관계형 장점<br>\n데이터의 구조 변화에 유연하다.<br>\n확장하기가 비교적 쉽다.(서버 수를 늘린다.)<br>\n구조 변화에 유연하고 확장하기 쉬워 방대한 양의 데이터를 저장하는데 유리하다.</p>\n<p>비관계형 단점<br>\n데이터의 완전성이 덜 보장된다.<br>\n트랜잭션이 안되거나 비교적 불안정하다.</p>","fields":{"slug":"/posts/data_base/","tagSlugs":["/tag/data-base/","/tag/backend/"]},"frontmatter":{"date":"2019-08-29","description":"데이터 베이스에 대한 글 ","tags":["data_base","backend"],"title":"데이터 베이스(DB)"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/data_base/"}}}