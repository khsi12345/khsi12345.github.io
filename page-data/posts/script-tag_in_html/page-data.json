{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/script-tag_in_html","webpackCompilationHash":"46ddc6ae74ac963d8b43","result":{"data":{"markdownRemark":{"id":"d72ceae9-4d2f-519b-9616-78c560d40163","html":"<p>html에서 script 태그는 어느 위치에서나 사용할 수 있다.<br>\n하지만 브라우저가 parsing 할 때 html을 DOM 트리로 만들고, css를 CSOM 트리로 만드는데 이때 script 태그를 만나게되면 script parsing이 끝날때까지 html과 css의 parsing이 멈추게 된다.<br>\n이를 freezing 현상이라 한다.(병목 현상)</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>script 태그가 위 코드처럼 body 태그 이전에 위치하면 script 태그가 parsing 되는 동안 화면에 아무것도 렌더링이 안될 수 있다.<br>\n또한 html의 parsing이 끝나지 않아 DOM이 완성되지 않았기 때문에 DOM API를 호출할 수 없으며(호출해도 에러 발생) 특정 DOM에 접근 할 수 없다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    //.............................\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>script 태그가 위 코드처럼 body 태그에서 body 태그가 닫히기 전에 위치하면 DOM과 CSOM 트리가 완성된 이후이기<br>\n때문에 DOM에 접근 가능하고 DOM API도 호출할 수 있다.</p>\n<p>이처럼 script 태그의 위치는 브라우저 rendering에 영향을 준다.</p>\n<p>즉, script 태그가 DOM, CSOM이 완성되기 전에 parsing되면 웹 페이지 로딩 속도가 느려지게 되고 성능 또한 떨어뜨리는 결과를 낸다.</p>\n<p>이를 해결하기 위해 script 태그에 async와 defer라는 속성을 주는 방법이 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">async</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">defer</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span></code></pre></div>\n<p>defer는 브라우저가 작업을 계속하고 백그라운드에서 script를 로드하고 DOM이 로드 될때 script를 실행한다.<br>\ndefer는 문서의 순서가 중요하다.<br>\n전체 DOM이 필요한 script에 사용되며 실행 순서가 중요하다.</p>\n<p>async는 script가 독립적이다.<br>\nasync는 문서의 순서가 중요하지 않다.<br>\n(async script가 여러개면 먼저 로드된것부터 실행된다. 다른 async script를 기다리거나 기다리게 하지 않는다.)<br>\n독립적인 script에 사용된다.</p>","fields":{"slug":"/posts/script-tag_in_html","tagSlugs":["/tag/html/"]},"frontmatter":{"date":"2019-10-30","description":"html에서 script 태그 위치에 대한 글 작성","tags":["html"],"title":"html에서 script 태그의 위치"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/script-tag_in_html"}}}