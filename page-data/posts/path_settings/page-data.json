{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/path_settings","webpackCompilationHash":"4179c23b26519f4ca882","result":{"data":{"markdownRemark":{"id":"209e72fe-2810-5860-9e22-b2e6c71fcbd1","html":"<p>package.json 파일에서<br>\nscript 부분을</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;scripts&quot;: {\n    &quot;dev&quot;: &quot;NODE_PATH=. next dev&quot;,\n    &quot;build&quot;: &quot;NODE_PATH=. next build&quot;,\n    &quot;start&quot;: &quot;next start&quot;\n  }</code></pre></div>\n<p>이렇게 바꿔주기.<br>\nNODE<em>PATH는 모듈 로드할 경우 모듈이 위치한 경로를 말하는데…<br>\nCRA 경우 모든 파일들이 src 디렉토리 내부에 존재하기 때문에<br>\nNODE</em>PATH=src로 설정해주면 모듈들 경로를 작성할 때 모듈이 위치한 디렉토리에<br>\n접근하기만 하면된다.</p>\n<p>Next.js 경우에는 components 디렉토리, pages 디렉토리가 있는데 이 2개의 디렉토리를 내부에 두고 있는 부모 디렉토리가 없기 때문에 각각의 디렉토리에 접근해야 한다.<br>\nNODE_PATH=.로 설정해주면 모듈들 경로를 자겅할 때 모듈이 위치한 디렉토리에<br>\n접근하기만 하면된다.</p>\n<p>위에서 NODE_PATH를 설정해주기 전까지는 ./ 또는 ../ 같은 상대 경로를 사용하여<br>\n필요한 모듈이 위치해있는 곳까지 접근했어야 했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const withSass = require(&#39;@zeit/next-sass&#39;);\nconst withCSS = require(&#39;@zeit/next-css&#39;);\n\nmodule.exports = withCSS(\n  withSass({\n    target: &#39;server&#39;,\n    webpack(config, options) {\n      config.module.rules.push(\n        {\n          test: /\\.(png|jpg|gif|svg|eot|ttf|woff|woff2)$/,\n          use: {\n            loader: &#39;url-loader&#39;,\n            options: {\n              limit: 100000,\n            },\n          },\n        },\n        // (config.resolve.modules = [...config.resolve.modules, &#39;./src&#39;]),\n      );\n      return config;\n    },\n    =======================\n    이 부분\n    plugins: [\n      &#39;module-resolver&#39;,\n      {\n        alias: {\n          &#39;~/*&#39;: &#39;.&#39;,\n        },\n      },\n    ],\n    ========================\n  }),\n);</code></pre></div>\n<p>기존 next.config.js에 위 코드에 나와있는 이 부분을 추가하면 된다.</p>","fields":{"slug":"/posts/path_settings","tagSlugs":["/tag/next-js/","/tag/path/"]},"frontmatter":{"date":"2019-10-27","description":"절대 경로 설정하는 글 작성","tags":["next.js","path"],"title":"next.js에서 절대경로 설정하기"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/path_settings"}}}