{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/path_settings","webpackCompilationHash":"50bb968c29afd83e990f","result":{"data":{"markdownRemark":{"id":"6007300d-d76c-53ca-9bcb-482765ec8a5e","html":"<p>package.json 파일에서<br>\nscript 부분을</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">\"scripts\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"dev\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"NODE_PATH=. next dev\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"NODE_PATH=. next build\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"next start\"</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>이렇게 바꿔주기.<br>\nNODE<em>PATH는 모듈 로드할 경우 모듈이 위치한 경로를 말하는데…<br>\nCRA 경우 모든 파일들이 src 디렉토리 내부에 존재하기 때문에 NODE</em>PATH=src로 설정해주면 모듈들 경로를 작성할 때<br>\n모듈이 위치한 디렉토리에 접근하기만 하면된다.</p>\n<p>Next.js 경우에는 components 디렉토리, pages 디렉토리가 있는데 이 2개의 디렉토리를 내부에 두고 있는 부모 디렉토리가 없기 때문에 각각의 디렉토리에 접근해야 한다.<br>\nNODE_PATH=.로 설정해주면 모듈들 경로를 작성할 때 모듈이 위치한 디렉토리에 접근하기만 하면된다.</p>\n<p>위에서 NODE_PATH를 설정해주기 전까지는 ./ 또는 ../ 같은 상대 경로를 사용하여 필요한 모듈이 위치해있는 곳까지 접근했어야 했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> withSass <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@zeit/next-sass'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> withCSS <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@zeit/next-css'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">withCSS</span><span class=\"token punctuation\">(</span>\n  <span class=\"token function\">withSass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    target<span class=\"token punctuation\">:</span> <span class=\"token string\">'server'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">webpack</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">config<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      config<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">{</span>\n          test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.(png|jpg|gif|svg|eot|ttf|woff|woff2)$/</span><span class=\"token punctuation\">,</span>\n          use<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            loader<span class=\"token punctuation\">:</span> <span class=\"token string\">'url-loader'</span><span class=\"token punctuation\">,</span>\n            options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n              limit<span class=\"token punctuation\">:</span> <span class=\"token number\">100000</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// (config.resolve.modules = [...config.resolve.modules, './src']),</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> config<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">==</span>\n    이 부분\n    plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">'module-resolver'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        alias<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token string\">'~/*'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>기존 next.config.js에 위 코드에 나와있는 이 부분을 추가하면 된다.</p>","fields":{"slug":"/posts/path_settings","tagSlugs":["/tag/nextjs/"]},"frontmatter":{"date":"2019-10-27","description":"절대 경로 설정하는 글 작성","tags":["nextjs"],"title":"next.js에서 절대경로 설정하기"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/path_settings"}}}